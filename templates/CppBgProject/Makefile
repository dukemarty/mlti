# Makefile (this is -*- Makefile -*-)
# 
# This is a makefile skeleton. In a lot of projects, this doesn't have
# to be modified at all. If you do have to or want to modify it,
# please let the comments guide you.
# 
#    Last Author: !!userinfo-fullname!! (<!!userinfo-email!!>)
#    Date of last change:  !!actual-date!!
#
#    Author:    !!userinfo-fullname!! (<!!userinfo-email!!>)
#    Date:      !!actual-date!!
#    Copyright: !!userinfo-fullname!!, Chair Prof. Dillmann (IAIM)
#               Institute for Computer Science and Engineering (CSE)
#	        University of Karlsruhe. All rights reserved
#	        http://wwwiaim.ira.uka.de

# TARGET: Put the name of the final executable here.
# You can build a shared library by making this end in ".so" or a
# static library by making it end in ".a". In that case, MAIN_OBJS are
# ignored!
TARGET=!!project-name!!

# TOPDIR: Put the path to the toplevel project here, if this is a
# subproject. Emacs does this automatically for you. The path is best
# expressed as combination of ".."'s, since then you can move the
# whole directory tree.
TOPDIR=!!top-directory!!

#
# Object file specifications:
#         "What things that I have written go into the program?"
#

# MAIN_OBJS: Contains the main C/C++ file(s). Only used if you're not
# building a library!
MAIN_OBJS=Main

# TESTABLE_OBJS: All C/C++ files that contain a test block. Usually,
# this means at least all files auto-generated by Emacs. Every XXX
# that is listed here can be made into a standalone testable program
# by typing "make XXX_test".
TESTABLE_OBJS=

# GENERAL_OBJS: Everything else.
GENERAL_OBJS=

# IDL_FILES: Put CORBA IDL files your program depends upon here. They
# will be automatically stubbed and built.
IDL_FILES=

# MOC_FILES: Put Qt .moc files your program depends upon here. They
# will be automatically stubbed and built.
MOC_FILES=

# UI_FILES: Put QT .ui files your program depends upon here. They
# will be automatically stubbed and built.
UI_FILES=

# SUBPROJECTS_BEFORE: If this project contains any directories that
# are projects in themselves, put them here. These will be built
# BEFORE this project is built. Use that for libraries etc. that this
# project depends on.
# Note: You can also define the variable SUBPROJECTS, which does the
# same as this one -- the _BEFORE suffix is just for clarity, to make
# immediately obvious exactly at what time a subproject is built.
SUBPROJECTS_BEFORE=

# SUBPROJECTS_AFTER: If this project contains any directories that are
# projects in themselves, put them here. These will be built AFTER
# this project is built. Use that for tools etc. that use this project
# as a library.
SUBPROJECTS_AFTER=


# VERBOSE: Set this to "yes" to get more information about the build
# process (compiler and linker arguments, etc.)
VERBOSE=no

# DEBUG: Set this to "no" to prevent generation of debugging
# info. Saves a bit in disk space.
DEBUG=yes

# AUTODOC: Set this to "no" to prevent automatical documentation
# generation. Saves a bit in compile time.
AUTODOC=no

# ESSENTIAL: Set this to "no" to continue compiling the parent project
# even if something in this subproject generated an error.
ESSENTIAL=yes

# USECORBA: Set this to "yes" if you don't have any IDL files but
# want to use CORBA anyway. If you do have IDL files, don't worry
# about this; having IDL files overrides this setting.
USECORBA=no

# USEQT: Set this to "yes" if you don't have any .moc or .ui files but
# want to use Qt anyway. If you do have .moc or .ui files, don't worry
# about this; having such files overrides this setting.
USEQT=no

# USE_QT4: Set this to no if you want to use the older Qt3. This switch
# has effects only if qt is used at all. Otherwise simply ignore it.
USE_QT4=yes



# BGTOOLSDIR: Points to the directory where bgtools resides on your
# machine. You really shouldn't need to change this.
BGTOOLSDIR=!!bgtools-directory!!

include $(BGTOOLSDIR)/makerules/project.make

